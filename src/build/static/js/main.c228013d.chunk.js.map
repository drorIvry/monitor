{"version":3,"sources":["components/Copyright.js","history.js","actions/LoginActions.js","components/Login.js","components/Register.js","actions/FrameActions.js","components/UsageChart.js","components/ListItems.js","components/Frame.js","actions/DarkModeAction.js","actions/DrawerActions.js","components/CpuChart.js","actions/AlertsActions.js","components/Dashboard.js","actions/DashboardActions.js","components/Reports.js","actions/ReportsSummeryActions.js","components/ReportPage.js","actions/ReportsActions.js","actions/MonitorDialogActions.js","actions/MonitorsActions.js","components/AddMonitor.js","components/Monitors.js","components/Alerts.js","components/NotFound.js","App.js","reducers/DarkModeReducer.js","reducers/DrawerReducer.js","reducers/MonitorDialogReducer.js","reducers/FrameReducer.js","reducers/LoginReducer.js","reducers/MonitorsReducer.js","reducers/ReportsSummeryReducer.js","reducers/ReportsReducer.js","reducers/DashboardReducer.js","reducers/AlertsReducer.js","reducers/index.js","store.js","serviceWorker.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","appHistory","createBrowserHistory","login","username","password","accountID","firstName","type","payload","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","connect","state","dispatch","onLogin","classes","useState","data","setData","remember","setRemember","useCookies","setCookie","err","setErr","errorText","setErrorText","handleChange","key","value","Container","component","maxWidth","CssBaseline","className","Avatar","TextField","required","fullWidth","error","helperText","id","onChange","event","target","label","name","autoComplete","autoFocus","Grid","container","Checkbox","onClick","Button","axios","get","withCredentials","auth","then","response","history","push","catch","console","item","Box","mt","xs","sm","log","post","justify","toggleProgressBar","isOpen","toggleSnackbar","text","snackbarVisible","snackbarText","getTooltip","active","Number","toFixed","COLORS","UsageChart","height","onMouseEnter","this","onPieEnter","props","cx","cy","innerRadius","outerRadius","fill","paddingAngle","dataKey","map","entry","index","length","content","PureComponent","mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","root","toolbar","paddingRight","toolbarIcon","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","overflow","paddingTop","paddingBottom","fixedHeight","darkmode","paddingLeft","message","dark","switchMode","frameProgress","darkMode","frame","alerts","onSwitchClick","onDrawerClick","toggleDrawer","React","removeCookie","useDispatch","handleClose","reason","AppBar","clsx","open","Toolbar","IconButton","edge","aria-label","noWrap","Badge","badgeContent","progressbarVisible","LinearProgress","Drawer","Divider","List","FormControlLabel","control","Switch","checked","onLogout","accountList","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContent","aria-describedby","action","icon","CpuChart","graph_data","top","right","left","bottom","strokeDasharray","stroke","updateAlerts","dashboard","updateDashboard","monitors","loaded","setLoaded","fixedHeightPaper","convertToGB","createData","raw","used","free","useEffect","a","alertsResponse","fetchData","md","lg","Paper","Memory","Disk","CPU","tableWrapper","maxHeight","reportsSummery","updateReportsSummery","reports","toggleProgressbar","page","setPage","rowsPerPage","setRowsPerPage","Table","stickyHeader","size","TableHead","TableRow","TableCell","TableBody","slice","row","hover","tabIndex","ReportID","MonitorName","TimeStamp","PCName","TablePagination","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","newPage","onChangeRowsPerPage","updateReports","match","disk","network","users","setOpen","num","handleClick","card","currentIndex","indexOf","newOpen","splice","params","reportID","total_load","cpu_count","cores","total","available","percent","partitions","partition","device","Collapse","in","timeout","unmountOnExit","disablePadding","nested","fstype","opts","mount_point","Network","address","OS","version","fullname","architecture","processor","Users","terminal","host","Math","floor","Battery","toggleDialog","updateMonitors","flex","monitorsField","monitorsProgress","Transition","forwardRef","ref","Slide","direction","dialogStatus","monitorDialog","onDialogClick","Dialog","dialogOpen","TransitionComponent","pcName","monitorName","selected","setSelected","indeterminate","newSelecteds","n","APIKey","inputProps","isItemSelected","labelId","selectedIndex","newSelected","concat","apiKeys","delay","setDelay","callback","savedCallback","useRef","current","setInterval","clearInterval","useInterval","_id","Alert","AlertDate","alertIds","useMemo","createMuiTheme","cookies","loggedIn","ThemeProvider","path","exact","exsact","ReportPage","initState","reducer","combineReducers","DarkModeReducer","DrawerReducer","MonitorDialogReducer","FrameReducer","LoginReducer","MonitorsReducer","ReportsSummeryReducer","ReportsReducer","DashboardReducer","AlertsReducer","createStore","reducers","applyMiddleware","logger","promiseMiddleware","Boolean","window","location","hostname","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c228013d.chunk.js","sourcesContent":["import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\n\n\nexport default function Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://github.com/drorIvry\">\n                Dror Ivry\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}","import { createBrowserHistory } from 'history';\n\nconst appHistory = createBrowserHistory();\n\nexport default appHistory;","export function login(username, password, accountID, firstName) {\n    return {\n        type: \"LOGIN\",\n        payload: {\n            username,\n            password,\n            accountID,\n            firstName,\n        }\n    }\n}\n\nexport function logout(){\n    return {\n        type: \"LOGOUT\",\n    }\n}\n\n","import React, {useState} from 'react';\nimport {connect} from \"react-redux\";\nimport {useCookies} from 'react-cookie';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\n\nimport Copyright from './Copyright';\nimport history from '../history';\nimport {login} from \"../actions/LoginActions\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nfunction SignIn({login, onLogin}) {\n    const classes = useStyles();\n    const [data, setData] = useState([]);\n    const [remember, setRemember] = useState(false);\n    const [cookies, setCookie] = useCookies(['login']);\n    const [err, setErr] = useState(false);\n    const [errorText, setErrorText] = useState('');\n\n    const handleChange = (key, value) => {\n        setData({...data, [key]: value})\n    };\n\n    const toggleRemember = () => {\n        setRemember(!remember);\n    }\n    const onLoginPressed = () => {\n        axios.get('/login', {\n            withCredentials: true,\n            auth: {\n                username: data.username,\n                password: data.password,\n            },\n        }).then((response) => {\n\n            if(remember){\n                setCookie('login', {\n                    username: data.username,\n                    password: data.password,\n                })\n            }\n            onLogin(data.username, data.password, response.accountID, response.firstName);\n            history.push('/dashboard')\n        }).catch((error) => {\n            setErr(true);\n            setErrorText('Incorrect Username / Password.');\n            console.error(error);\n        })\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <div>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        error={err}\n                        helperText={errorText}\n                        id=\"username\"\n                        onChange={(event) => {\n                            handleChange('username', event.target.value)\n                        }}\n                        label=\"User Name\"\n                        name=\"username\"\n                        autoComplete=\"email\"\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        error={err}\n                        helperText={errorText}\n                        onChange={(event) => {\n                            handleChange('password', event.target.value)\n                        }}\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                    />\n                    <Grid container>\n                        <Checkbox value={remember}  color=\"primary\" onClick={toggleRemember}/>\n                        <p> Remember me</p>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={onLoginPressed}\n                    >\n                        Sign In\n                    </Button>\n                    <Grid container>\n                        <Grid item>\n                            <Link onClick={event => history.push('/register')} variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </div>\n            </div>\n            <Box mt={8}>\n                <Copyright/>\n            </Box>\n        </Container>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        login: state.login,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onLogin: (username, password, accountID, firstName) => {\n            dispatch(login(username, password, accountID, firstName));\n        },\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, {useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\n\nimport Copyright from './Copyright'\nimport history from '../history';\nimport {login} from \"../actions/LoginActions\";\nimport {connect} from \"react-redux\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nfunction SignUp({login, onLogin}) {\n    const classes = useStyles();\n    const [data, setData] = useState([]);\n\n    const handleChange = (key, value) => {\n        setData({...data, [key]:value})\n    };\n\n    const onRegister = () => {\n        console.log(data);\n        axios.post( '/accounts', data).then(response => {\n            onLogin(data.username, data.password, response.data.accountID, data.firstName);\n            history.push('/dashboard');\n        }).catch((error) => {\n            console.error(error);\n        });\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                <div>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                autoComplete=\"fname\"\n                                name=\"firstName\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"firstName\"\n                                label=\"First Name\"\n                                onChange={(event) => {handleChange('firstName', event.target.value)}}\n                                autoFocus\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"lastName\"\n                                label=\"Last Name\"\n                                onChange={(event) => {handleChange('lastName', event.target.value)}}\n                                name=\"lastName\"\n                                autoComplete=\"lname\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"User Name\"\n                                name=\"username\"\n                                onChange={(event) => {handleChange('username', event.target.value)}}\n                                autoComplete=\"email\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                onChange={(event) => {handleChange('password', event.target.value)}}\n                                autoComplete=\"current-password\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={onRegister}\n                        className={classes.submit}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link  onClick={event => history.push('/login')} variant=\"body2\">\n                                Already have an account? Sign in\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </div>\n            </div>\n            <Box mt={5}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        login: state.login,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onLogin: (username, password, accountID, firstName) => {\n            dispatch(login(username, password, accountID, firstName));\n        },\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","export function toggleProgressBar(isOpen) {\n    return {\n        type: \"TOGGLE_FRAME_PROGRESSBAR\",\n        payload: isOpen\n    }\n}\n\nexport function toggleSnackbar(isOpen, text) {\n    return {\n        type: \"TOGGLE_FRAME_SNACKBAR\",\n        payload: {\n            snackbarVisible: isOpen,\n            snackbarText: text,\n        }\n    }\n}","import React, { PureComponent } from 'react';\nimport {\n    PieChart, Pie, Tooltip, Cell, Legend,\n} from 'recharts';\nimport {toggleProgressBar} from \"../actions/FrameActions\";\nimport {updateDashboard} from \"../actions/DashboardActions\";\nimport {connect} from \"react-redux\";\n\nfunction getTooltip({ active, payload, label }){\n    if (active) {\n        return (\n            <div>\n                <p>{payload[0].name + ': ' + Number(payload[0].value).toFixed(3) + 'GB'}</p>\n            </div>\n        )\n    }\n}\n\nconst COLORS = ['#ff4e46', '#00C49F', '#FFBB28', '#ff4e46'];\n\n\nexport default class UsageChart extends PureComponent {\n\n    convertToGB(value) {\n        return value/1024/1024/1024;\n    }\n\n\n    render() {\n        return (\n            <PieChart width={350} height={250} onMouseEnter={this.onPieEnter}>\n                <Pie\n                    data={this.props.data}\n                    cx={220}\n                    cy={100}\n                    innerRadius={60}\n                    outerRadius={80}\n                    fill=\"#8884d8\"\n                    paddingAngle={5}\n                    dataKey=\"value\"\n                >\n                    {\n                        this.props.data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                    }\n                </Pie>\n                <Legend />\n                <Tooltip content={getTooltip}/>\n\n            </PieChart>\n        );\n    }\n};","import React from 'react';\nimport { useCookies } from 'react-cookie';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport AlarmIcon from '@material-ui/icons/Warning';\nimport {logout} from '../actions/LoginActions';\nimport { useDispatch } from 'react-redux'\n\nimport history from '../history'\n\nexport const mainListItems = (\n    <div>\n        <ListItem button onClick={event => history.push('/dashboard')}>\n            <ListItemIcon>\n                <DashboardIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Dashboard\" />\n        </ListItem>\n        <ListItem button onClick={event => history.push('/reports')}>\n            <ListItemIcon>\n                <BarChartIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Reports\" />\n        </ListItem>\n        <ListItem button onClick={event => history.push('/monitors')}>\n            <ListItemIcon >\n                <LayersIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Monitors\" />\n        </ListItem>\n        <ListItem button onClick={event => history.push('/alerts')}>\n            <ListItemIcon >\n                <AlarmIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Alerts\" />\n        </ListItem>\n\n    </div>\n);\n\nexport function accountList(onLogout) {\n    return (\n        <div>\n            <ListItem button onClick={onLogout}>\n                <ListItemIcon>\n                    <ExitToAppIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Logout\" />\n            </ListItem>\n\n        </div>\n    );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport {accountList, mainListItems} from './ListItems';\nimport {connect, useDispatch} from 'react-redux';\nimport history from '../history'\nimport {toggleDarkMode} from '../actions/DarkModeAction';\nimport {toggleDrawer} from '../actions/DrawerActions';\nimport {toggleProgressBar, toggleSnackbar} from '../actions/FrameActions';\nimport {useCookies} from \"react-cookie\";\nimport {logout} from \"../actions/LoginActions\";\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n    darkmode: {\n        paddingLeft: 18,\n        paddingTop: 18,\n\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    switchMode: {\n        marginRight: 10,\n    },\n    frameProgress: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\nfunction Frame({alerts, darkMode, drawer, onDrawerClick, onSwitchClick, frame, toggleProgressBar, toggleSnackbar}) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n    const [cookies, setCookie, removeCookie] = useCookies(['login']);\n    const dispatch = useDispatch();\n\n    const onLogout = () => {\n        removeCookie('login');\n        dispatch(logout());\n    };\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        toggleSnackbar(false, '');\n    };\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, drawer.open && classes.appBarShift)}>\n                <Toolbar className={classes.toolbar}>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={event => onDrawerClick(true)}\n                        className={clsx(classes.menuButton, drawer.open && classes.menuButtonHidden)}\n                    >\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                        Monitor\n                    </Typography>\n                    <IconButton color=\"inherit\" onClick={event => {\n                        history.push('/alerts')\n                    }}>\n                        <Badge badgeContent={alerts.alerts.length} color=\"secondary\">\n                            <NotificationsIcon/>\n                        </Badge>\n                    </IconButton>\n                </Toolbar>\n                {frame.progressbarVisible && <LinearProgress color=\"secondary\"/>}\n            </AppBar>\n\n            <Drawer\n                variant=\"permanent\"\n                classes={{\n                    paper: clsx(classes.drawerPaper, !drawer.open && classes.drawerPaperClose),\n                }}\n                open={drawer.open}\n            >\n                <div className={classes.toolbarIcon}>\n                    <IconButton onClick={event => onDrawerClick(false)}>\n                        <ChevronLeftIcon/>\n                    </IconButton>\n                </div>\n                <Divider/>\n                <List>{mainListItems}</List>\n                <Divider/>\n                <FormControlLabel\n                    className={classes.darkmode}\n                    control={<Switch className={classes.switchMode} checked={darkMode.darkMode}\n                                     onChange={() => onSwitchClick()}/>}\n                    label=\"Dark Mode\"\n                />\n                <List>{accountList(onLogout)}</List>\n            </Drawer>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={frame.snackbarVisible}\n                autoHideDuration={6000}\n                onClose={handleClose}\n            >\n                <SnackbarContent\n                    className={classes.error}\n                    aria-describedby=\"client-snackbar\"\n                    message={ <span id=\"client-snackbar\" className={classes.message}>\n                         <ErrorIcon className={classes.error} />\n                        {frame.snackbarText}\n                     </span>}\n                    action={[\n                        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n                            <CloseIcon className={classes.icon}/>\n                        </IconButton>,\n                    ]}\n                />\n            </Snackbar>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        darkMode: state.darkMode,\n        drawer: state.drawer,\n        frame: state.frame,\n        alerts: state.alerts,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onSwitchClick: () => {\n            dispatch(toggleDarkMode());\n        },\n        onDrawerClick: (isOpen) => {\n            dispatch(toggleDrawer(isOpen));\n        },\n        toggleProgressBar: (isOpen) => {\n            dispatch(toggleProgressBar(isOpen));\n        },\n        toggleSnackbar: (isOpen, text) => {\n            dispatch(toggleSnackbar(isOpen, text))\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Frame);\n","export function toggleDarkMode() {\n    return {\n        type: \"TOGGLE_DARK_MODE\",\n        payload: null\n    }\n}","export function toggleDrawer(isOpen) {\n    return {\n        type: \"TOGGLE_DRAWER\",\n        payload: isOpen\n    }\n}","import React, { PureComponent } from 'react';\nimport {\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nexport default function CpuChart({graph_data}) {\n        return (\n            <LineChart\n                width={1000}\n                height={500}\n                data={graph_data}\n                margin={{\n                    top: 5, right: 30, left: 200, bottom: 5,\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"time\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"total_load\" stroke=\"#82ca9d\" />\n            </LineChart>\n        );\n    }\n\n\n","export function updateAlerts(alerts) {\n    return {\n        type: \"UPDATE_ALERTS\",\n        payload: alerts\n    }\n}\n","import React, {useEffect} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport UsageChart from './UsageChart'\nimport Copyright from './Copyright';\nimport Frame from './Frame';\nimport CpuChart from './CpuChart'\nimport {toggleProgressBar, toggleSnackbar} from \"../actions/FrameActions\";\nimport {updateDashboard} from \"../actions/DashboardActions\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport {updateAlerts} from \"../actions/AlertsActions\";\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 350,\n    },\n}));\n\nfunction Dashboard({dashboard, updateDashboard, updateAlerts, toggleProgressBar, toggleSnackbar, login}) {\n    const classes = useStyles();\n    const [loaded, setLoaded] = React.useState(false);\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    const convertToGB = (value) =>  {\n        return value/1024/1024/1024;\n    }\n    const createData = (raw) => {\n        return [\n            { name: 'Used', value: convertToGB(raw.used)},\n            { name: 'Free', value: convertToGB(raw.free)},\n        ];\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try{\n                toggleProgressBar(true);\n                const response = await axios.get('/dashboard', {\n                        withCredentials: true,\n                        auth: {\n                            username: login.username,\n                            password: login.password,\n                        },\n                    },\n                );\n                updateDashboard(response.data);\n                toggleProgressBar(false);\n                setLoaded(true);\n\n                const alertsResponse = await axios.get('/alerts', {\n                        withCredentials: true,\n                        auth: {\n                            username: login.username,\n                            password: login.password,\n                        },\n                    },\n                );\n                updateAlerts(alertsResponse.data);\n            }\n            catch (e) {\n                toggleProgressBar(false);\n                toggleSnackbar(true,e.message)\n\n            }\n\n        };\n        fetchData();\n    }, []);\n\n    return (\n        <div className={classes.root}>\n            <Frame/>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} md={6} lg={6}>\n                            <Paper className={fixedHeightPaper}>\n                                <h2>Memory</h2>\n                                {loaded &&<UsageChart data={createData(dashboard.Memory)}/>}\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={6}>\n                            <Paper className={fixedHeightPaper}>\n                                <h2>Disk</h2>\n                                {loaded &&<UsageChart data={createData(dashboard.Disk)}/>}\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Paper className={classes.paper}>\n                                <h1>CPU</h1>\n                                {loaded && <CpuChart graph_data={dashboard.CPU}/>}\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Container>\n                <Copyright />\n            </main>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        dashboard: state.dashboard,\n        login: state.login,\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleProgressBar: (isOpen) => {\n            dispatch(toggleProgressBar(isOpen));\n        },\n        updateDashboard: (data) => {\n            dispatch(updateDashboard(data));\n        },\n        toggleSnackbar: (isOpen, text) => {\n            dispatch(toggleSnackbar(isOpen, text))\n        },\n        updateAlerts: (monitors) => {\n            dispatch(updateAlerts(monitors));\n        },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","export function updateDashboard(data) {\n    return {\n        type: \"UPDATE_DASHBOARD\",\n        payload: data\n    }\n}\n","import React, {useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Container from '@material-ui/core/Container';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableHead from '@material-ui/core/TableHead';\nimport Paper from '@material-ui/core/Paper';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Frame from './Frame';\nimport Copyright from './Copyright';\nimport history from '../history'\nimport {toggleProgressBar, toggleSnackbar} from \"../actions/FrameActions\";\nimport {updateReportsSummery} from \"../actions/ReportsSummeryActions\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 350,\n    },\n    tableWrapper: {\n        maxHeight: 440,\n        overflow: 'auto',\n    },\n}));\n\nfunction Reports({reportsSummery, updateReportsSummery, toggleProgressbar, toggleSnackbar, login,}) {\n    const classes = useStyles();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                toggleProgressBar(true);\n                const response = await axios.get('/reports', {\n                        withCredentials: true,\n                        auth: {\n                            username: login.username,\n                            password: login.password,\n                        },\n                    },\n                );\n                updateReportsSummery(response.data);\n                toggleProgressBar(false);\n            } catch (e) {\n                toggleProgressBar(false);\n                toggleSnackbar(true, e.message);\n            }\n        };\n        fetchData();\n    }, [reportsSummery.reports.length]);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Frame/>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Paper>\n                        <div className={classes.tableWrapper}>\n\n                            <Table stickyHeader size=\"medium\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>Monitor</TableCell>\n                                        <TableCell>Report Date</TableCell>\n                                        <TableCell>PC Name</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {reportsSummery.reports.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, key) => {\n                                        return (\n                                            <TableRow hover tabIndex={-1} key={key}\n                                                      onClick={event => history.push('/report/' + row.ReportID)}>\n                                                <TableCell>{row.MonitorName}</TableCell>\n                                                <TableCell>{row.TimeStamp}</TableCell>\n                                                <TableCell>{row.PCName}</TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                </TableBody>\n                            </Table>\n                        </div>\n                        <TablePagination\n                            rowsPerPageOptions={[10, 25, 100]}\n                            component=\"div\"\n                            count={reportsSummery.reports.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            backIconButtonProps={{\n                                'aria-label': 'previous page',\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'next page',\n                            }}\n                            onChangePage={handleChangePage}\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\n                        />\n                    </Paper>\n                </Container>\n                <Copyright/>\n            </main>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        reportsSummery: state.reportsSummery,\n        login: state.login,\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleProgressBar: (isOpen) => {\n            dispatch(toggleProgressBar(isOpen));\n        },\n        updateReportsSummery: (reports) => {\n            dispatch(updateReportsSummery(reports));\n        },\n        toggleSnackbar: (isOpen, text) => {\n            dispatch(toggleSnackbar(isOpen, text));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Reports);","export function updateReportsSummery(reports) {\n    return {\n        type: \"UPDATE_REPORTS_SUMMERY\",\n        payload: reports\n    }\n}\n","import React, {useEffect} from 'react';\nimport {connect} from \"react-redux\";\n\nimport axios from \"axios\";\nimport clsx from 'clsx';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport {toggleProgressBar, toggleSnackbar} from \"../actions/FrameActions\";\nimport {updateReports} from \"../actions/ReportsActions\";\n\nimport Copyright from './Copyright';\nimport Frame from './Frame';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 350,\n    },\n}));\n\nfunction ReportPage({reports, toggleProgressBar, updateReports, match, login}) {\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    const [open, setOpen] = React.useState({\n        disk: [],\n        network: [],\n        users: [],\n\n    });\n    const [loaded, setLoaded] = React.useState(false);\n\n    const convertToGB = (num) => {\n        return (num / 1024 / 1024 / 1024).toFixed(3)\n    };\n\n    const handleClick = (card, value) => {\n        const currentIndex = open[card].indexOf(value);\n        const newOpen = {...open};\n\n        if (currentIndex === -1) {\n            newOpen[card].push(value);\n        } else {\n            newOpen[card].splice(currentIndex, 1);\n        }\n\n        setOpen(newOpen);\n    };\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                toggleProgressBar(true);\n                const response = await axios.get('/report/' + match.params.reportID, {\n                        withCredentials: true,\n                        auth: {\n                            username: login.username,\n                            password: login.password,\n                        },\n                    },\n                );\n                updateReports(response.data);\n                toggleProgressBar(false);\n                setLoaded(true);\n            } catch (e) {\n                toggleProgressBar(false);\n                toggleSnackbar(true, e.message);\n            }\n        };\n        fetchData();\n    }, []);\n\n\n    return (\n        <div className={classes.root}>\n            <Frame/>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    {loaded &&\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} md={4} lg={4}>\n                            <Paper className={fixedHeightPaper}>\n                                <h2>cpu</h2>\n                                <List>\n                                    <ListItem>\n                                        <ListItemText\n                                            primary={\"Load: \" + reports.reports.CPU[0].total_load + \"%\"}\n                                        />\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText\n                                            primary={\"Cores: \" + reports.reports.CPU[0].cpu_count}\n                                        />\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText\n                                            primary={\"Threads: \" + reports.reports.CPU[0].cores}\n                                        />\n                                    </ListItem>\n                                </List>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={12} md={4} lg={4}>\n                            <Paper className={fixedHeightPaper}>\n                                <h2>Memory</h2>\n                                <List>\n                                    <ListItem>\n                                        <ListItemText\n                                            primary={\"Total: \" + convertToGB(reports.reports.Memory.total) + \"GB\"}\n                                        />\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText\n                                            primary={\"Free: \" + convertToGB(reports.reports.Memory.available) + \"GB\"}\n                                        />\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText\n                                            primary={\"Percent: \" + reports.reports.Memory.percent + \"%\"}\n                                        />\n                                    </ListItem>\n                                </List>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={12} md={4} lg={4}>\n                            <Paper className={fixedHeightPaper}>\n                                <h2>Disk</h2>\n                                <List>\n                                    {reports.reports.Disk.partitions.map((partition, key) => {\n                                            return (\n                                                <div key={key}>\n                                                    <ListItem button onClick={event => handleClick('disk', key)}>\n                                                        <ListItemText primary={partition.device}/>\n                                                        {(open.disk.indexOf(key) !== -1) ? <ExpandLess/> : <ExpandMore/>}\n                                                    </ListItem>\n                                                    <Collapse in={open.disk.indexOf(key) !== -1} timeout=\"auto\"\n                                                              unmountOnExit>\n                                                        <List component=\"div\" disablePadding>\n                                                            <ListItem className={classes.nested}>\n                                                                <ListItemText primary={\"FS type: \" + partition.fstype}/>\n                                                            </ListItem>\n                                                            <ListItem className={classes.nested}>\n                                                                <ListItemText primary={\"Options: \" + partition.opts}/>\n                                                            </ListItem>\n                                                            <ListItem className={classes.nested}>\n                                                                <ListItemText\n                                                                    primary={\"Mount Point: \" + partition.mount_point}/>\n                                                            </ListItem>\n                                                        </List>\n                                                    </Collapse>\n                                                </div>\n                                            )\n                                        }\n                                    )}\n\n                                </List>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={12} md={4} lg={4}>\n                            <Paper className={fixedHeightPaper}>\n                                <h2>Network</h2>\n                                <List>\n                                    {reports.reports.Network.map((partition, key) => {\n                                            return (\n                                                <div key={key}>\n                                                    <ListItem button onClick={event => handleClick('network', key)}>\n                                                        <ListItemText primary={partition.name}/>\n                                                        {(open.network.indexOf(key) !== -1) ? <ExpandLess/> : <ExpandMore/>}\n                                                    </ListItem>\n                                                    <Collapse in={open.network.indexOf(key) !== -1} timeout=\"auto\"\n                                                              unmountOnExit>\n                                                        <List component=\"div\" disablePadding>\n                                                            <ListItem className={classes.nested}>\n                                                                <ListItemText primary={\"Address: \" + partition.address[0]}/>\n                                                            </ListItem>\n                                                        </List>\n                                                    </Collapse>\n                                                </div>\n                                            )\n                                        }\n                                    )}\n\n                                </List>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={12} md={4} lg={4}>\n                            <Paper className={fixedHeightPaper}>\n                                <h2>Operating System</h2>\n                                <List>\n                                    <ListItem>\n                                        <ListItemText\n                                            primary={\"OS:\" + reports.reports.OS.name}\n                                        />\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText\n                                            primary={\"Version: \" + reports.reports.OS.version}\n                                        />\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText\n                                            primary={\"Full Name: \" + reports.reports.OS.fullname}\n                                        />\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText\n                                            primary={\"Architecture: \" + reports.reports.OS.architecture}\n                                        />\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText\n                                            primary={\"Processor: \" + reports.reports.OS.processor}\n                                        />\n                                    </ListItem>\n                                </List>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={12} md={4} lg={4}>\n                            <Paper className={fixedHeightPaper}>\n                                <h2>Users</h2>\n                                <List>\n                                    {reports.reports.Users.map((partition, key) => {\n                                            return (\n                                                <div key={key}>\n                                                    <ListItem button onClick={event => handleClick('users', key)}>\n                                                        <ListItemText primary={partition.name}/>\n                                                        {(open.users.indexOf(key) !== -1) ? <ExpandLess/> : <ExpandMore/>}\n                                                    </ListItem>\n                                                    <Collapse in={open.users.indexOf(key) !== -1} timeout=\"auto\"\n                                                              unmountOnExit>\n                                                        <List component=\"div\" disablePadding>\n                                                            <ListItem className={classes.nested}>\n                                                                <ListItemText primary={\"User Name: \" + partition.name}/>\n                                                            </ListItem>\n                                                            <ListItem className={classes.nested}>\n                                                                <ListItemText primary={\"Terminal: \" + partition.terminal}/>\n                                                            </ListItem>\n                                                            <ListItem className={classes.nested}>\n                                                                <ListItemText primary={\"Host: \" + partition.host}/>\n                                                            </ListItem>\n                                                        </List>\n                                                    </Collapse>\n                                                </div>\n                                            )\n                                        }\n                                    )}\n\n                                </List>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={12} md={4} lg={4}>\n                            <Paper className={fixedHeightPaper}>\n                                <h2>Fans</h2>\n                                <List>\n                                    <ListItem>\n                                        <ListItemText\n                                            primary={\"N/A\"}\n                                        />\n                                    </ListItem>\n                                </List>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={12} md={4} lg={4}>\n                            <Paper className={fixedHeightPaper}>\n                                <h2>Temperatures</h2>\n                                <List>\n                                    <ListItem>\n                                        <ListItemText\n                                            primary={\"N/A\"}\n                                        />\n                                    </ListItem>\n                                </List>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={12} md={4} lg={4}>\n                            <Paper className={fixedHeightPaper}>\n                                <h2>Battery</h2>\n                                <List>\n                                    <ListItem>\n                                        <ListItemText\n                                            primary={\"Percent: \" + Math.floor(reports.reports.Battery.percent) + \"%\"}\n                                        />\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText\n                                            primary={\"Time Left: \" + (reports.reports.Battery.secsleft < 0) ? 'N/A' : reports.reports.Battery.secsleft}\n                                        />\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText\n                                            primary={\"Plugged In: \" + reports.reports.Battery.power_plugged ? 'Yes' : \"No\"}\n                                        />\n                                    </ListItem>\n                                </List>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                    }\n                </Container>\n                <Copyright/>\n            </main>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        reports: state.reports,\n        login: state.login,\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleProgressBar: (isOpen) => {\n            dispatch(toggleProgressBar(isOpen));\n        },\n        updateReports: (reports) => {\n            dispatch(updateReports(reports));\n        },\n        toggleSnackbar: (isOpen, text) => {\n            dispatch(toggleSnackbar(isOpen, text));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportPage);","export function updateReports(reports) {\n    return {\n        type: \"UPDATE_REPORTS\",\n        payload: reports\n    }\n}\n","export function toggleDialog(isOpen) {\n    return {\n        type: \"TOGGLE_MONITOR_DIALOG\",\n        payload: isOpen\n    }\n}\n\nexport function toggleProgressBar(isOpen) {\n    return {\n        type: \"TOGGLE_MONITOR_PROGRESSBAR\",\n        payload: isOpen\n    }\n}\n\n","export function updateMonitors(monitors) {\n    return {\n        type: \"UPDATE_MONITORS\",\n        payload: monitors\n    }\n}\n","import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport TextField from '@material-ui/core/TextField';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport {connect} from 'react-redux';\nimport axios from 'axios';\nimport history from '../history';\nimport {updateMonitors} from '../actions/MonitorsActions';\nimport {toggleDialog, toggleProgressBar} from '../actions/MonitorDialogActions';\nimport {toggleSnackbar} from \"../actions/FrameActions\";\n\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        position: 'relative',\n        width: 500\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n    monitorsField: {\n        margin: 10\n    },\n    monitorsProgress: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction AddMonitor({dialogStatus, onDialogClick, toggleProgressbar, login, monitors, updateMonitors, toggleSnackbar}) {\n    const classes = useStyles();\n    const [data, setData] = useState([]);\n\n    const handleChange = (key, value) => {\n        setData({...data, [key]:value})\n    };\n\n    const onSaveClick = () => {\n        toggleProgressbar(true);\n        axios.post( '/monitors', {\n                pcName: data.pcName,\n                monitorName: data.monitorName,\n            }, {\n                withCredentials: true,\n                auth: {\n                    username: login.username,\n                    password: login.password,\n                },\n            },\n        ).then((response)=> {\n            toggleProgressbar(false);\n            updateMonitors([...monitors.monitors, response.data]);\n            onDialogClick(false);\n            history.push('/monitors');\n\n        }).catch((error) => {\n            toggleProgressbar(false);\n            console.error(error);\n            toggleProgressBar(false);\n            toggleSnackbar(true, error.message);\n            onDialogClick(false);\n        });\n\n    };\n\n    return (\n        <div>\n            <Dialog open={dialogStatus.dialogOpen} onClose={() => onDialogClick(false)} TransitionComponent={Transition}>\n                <AppBar className={classes.appBar}>\n                    <Toolbar>\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={() => onDialogClick(false)} aria-label=\"close\">\n                            <CloseIcon/>\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            Add Monitor\n                        </Typography>\n                        <Button autoFocus color=\"inherit\" onClick={onSaveClick}>\n                            save\n                        </Button>\n                    </Toolbar>\n                </AppBar>\n                {dialogStatus.progressbarVisible &&<LinearProgress color=\"secondary\" />}\n                <TextField\n                    className={classes.monitorsField}\n                    margin=\"normal\"\n                    required\n                    onChange={(event) => {handleChange('pcName', event.target.value)}}\n                    id=\"name\"\n                    label=\"PC Name\"\n                    variant=\"outlined\"\n                    type=\"text\"\n                />\n                <TextField\n                    className={classes.monitorsField}\n                    margin=\"normal\"\n                    onChange={(event) => {handleChange('monitorName', event.target.value)}}\n                    required\n                    id=\"name\"\n                    variant=\"outlined\"\n                    label=\"Monitor Name\"\n                    type=\"text\"\n                />\n            </Dialog>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogStatus: state.monitorDialog,\n        login: state.login,\n        monitors: state.monitors,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onDialogClick: (isOpen) => {\n            dispatch(toggleDialog(isOpen));\n        },\n        toggleProgressbar: (isOpen) => {\n            dispatch(toggleProgressBar(isOpen));\n        },\n        updateMonitors: (monitors) => {\n            dispatch(updateMonitors(monitors));\n        },\n        toggleSnackbar: (isOpen, text) => {\n            dispatch(toggleSnackbar(isOpen, text));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddMonitor);\n","import React, {useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Container from '@material-ui/core/Container';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableHead from '@material-ui/core/TableHead';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport TableRow from '@material-ui/core/TableRow';\nimport {connect} from 'react-redux';\nimport axios from 'axios';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {toggleDialog} from '../actions/MonitorDialogActions';\nimport Frame from './Frame';\nimport AddMonitor from './AddMonitor';\nimport Copyright from './Copyright';\nimport {toggleProgressBar, toggleSnackbar} from '../actions/FrameActions';\nimport {updateMonitors} from '../actions/MonitorsActions';\nimport history from \"../history\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 350,\n    },\n    tableWrapper: {\n        maxHeight: 440,\n        overflow: 'auto',\n    },\n}));\n\nfunction Monitors({onDialogClick, toggleProgressBar, updateMonitors, toggleSnackbar, login, monitors}) {\n    const classes = useStyles();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const [selected, setSelected] = React.useState([]);\n\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            const newSelecteds = monitors.monitors.map(n => n.APIKey);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = name => selected.indexOf(name) !== -1;\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                toggleProgressBar(true);\n                const response = await axios.get('/monitors', {\n                        withCredentials: true,\n                        auth: {\n                            username: login.username,\n                            password: login.password,\n                        },\n                    },\n                );\n\n                updateMonitors(response.data);\n                toggleProgressBar(false);\n            } catch (e) {\n                toggleProgressBar(false);\n                toggleSnackbar(true, e.message);\n            }\n\n        };\n        fetchData();\n    }, [monitors.monitors.length]);\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const onDeletePressed = () => {\n        axios.post('/delete-monitor', {\n                apiKeys: selected,\n            },\n            {\n                withCredentials: true,\n                auth: {\n                    username: login.username,\n                    password: login.password,\n                },\n            }).then((response) => {\n            toggleProgressBar(false);\n            updateMonitors([...monitors.monitors, response.data]);\n            onDialogClick(false);\n        }).catch((error) => {\n            toggleProgressBar(false);\n            console.error(error);\n            toggleSnackbar(true, error.message);\n            onDialogClick(false);\n        });\n    };\n\n    return (\n        <div className={classes.root}>\n            <Frame/>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Paper>\n                        <div className={classes.tableWrapper}>\n\n                            <Table stickyHeader size=\"medium\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell padding=\"checkbox\">\n                                            <Checkbox\n                                                indeterminate={selected.length > 0 && selected.length < monitors.monitors.length}\n                                                checked={selected.length === monitors.monitors.length}\n                                                onChange={handleSelectAllClick}\n                                                inputProps={{'aria-label': 'select all desserts'}}\n                                            />\n                                        </TableCell>\n                                        <TableCell>Monitor API Key</TableCell>\n                                        <TableCell>Monitor Name</TableCell>\n                                        <TableCell>PC Name</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {monitors.monitors.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n                                        const isItemSelected = isSelected(row.APIKey);\n                                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                                        return (\n                                            <TableRow hover tabIndex={-1} key={row.id}\n                                                      onClick={event => handleClick(event, row.APIKey)}>\n                                                <TableCell padding=\"checkbox\">\n                                                    <Checkbox\n                                                        checked={isItemSelected}\n                                                        inputProps={{'aria-labelledby': labelId}}\n\n                                                    />\n                                                </TableCell>\n                                                <TableCell>{row.APIKey}</TableCell>\n                                                <TableCell>{row.MonitorName}</TableCell>\n                                                <TableCell>{row.PCName}</TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                </TableBody>\n                            </Table>\n                        </div>\n                        <TablePagination\n                            rowsPerPageOptions={[10, 25, 100]}\n                            component=\"div\"\n                            count={monitors.monitors.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            backIconButtonProps={{\n                                'aria-label': 'previous page',\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'next page',\n                            }}\n                            onChangePage={handleChangePage}\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\n                        />\n\n                        <Button variant=\"outlined\" className={classes.button} onClick={() => onDialogClick(true)}>\n                            Add new Monitor\n                        </Button>\n                        <AddMonitor/>\n                        {selected.length > 0 &&\n                        <Button variant=\"outlined\" className={classes.button} onClick={onDeletePressed}>\n                            Delete\n                        </Button>}\n                    </Paper>\n                </Container>\n                <Copyright/>\n            </main>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogStatus: state.monitorDialog,\n        monitors: state.monitors,\n        login: state.login,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onDialogClick: (isOpen) => {\n            dispatch(toggleDialog(isOpen));\n        },\n        toggleProgressBar: (isOpen) => {\n            dispatch(toggleProgressBar(isOpen));\n        },\n        updateMonitors: (monitors) => {\n            dispatch(updateMonitors(monitors));\n        },\n        toggleSnackbar: (isOpen, text) => {\n            dispatch(toggleSnackbar(isOpen, text));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Monitors);","import React, {useEffect, useRef} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Container from '@material-ui/core/Container';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableHead from '@material-ui/core/TableHead';\nimport Paper from '@material-ui/core/Paper';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Frame from './Frame';\nimport Copyright from './Copyright';\nimport history from '../history'\nimport {toggleProgressBar, toggleSnackbar} from \"../actions/FrameActions\";\nimport {updateAlerts} from \"../actions/AlertsActions\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\n\n// Generate Order Data\nfunction createData(id, date, pcName, alertDescription) {\n    return {id, alertDescription, date, pcName,};\n}\n\nfunction useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest function.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 350,\n    },\n    tableWrapper: {\n        maxHeight: 440,\n        overflow: 'auto',\n    },\n}));\n\nfunction Alerts({alerts, login, toggleProgressBar, updateAlerts, toggleSnackbar}) {\n    const classes = useStyles();\n    const [page, setPage] = React.useState(0);\n    const [loaded, setLoaded] = React.useState(false);\n    const [delay, setDelay] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const [selected, setSelected] = React.useState([]);\n\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            const newSelecteds = alerts.alerts.map(n => n._id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = name => selected.indexOf(name) !== -1;\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n\n    useInterval(() => {\n        const fetchData = async () => {\n            try {\n                toggleProgressBar(true);\n                const response = await axios.get('/alerts', {\n                        withCredentials: true,\n                        auth: {\n                            username: login.username,\n                            password: login.password,\n                        },\n                    },\n                );\n                updateAlerts(response.data);\n                toggleProgressBar(false);\n                setLoaded(true);\n                setDelay(10 * 1000);\n            } catch (e) {\n                toggleProgressBar(false);\n                toggleSnackbar(true, e.message);\n            }\n\n        };\n        fetchData();\n    }, delay);\n\n    const onDeletePressed = () => {\n        axios.post('/delete-alerts', {\n                alertIds: selected,\n            },\n            {\n                withCredentials: true,\n                auth: {\n                    username: login.username,\n                    password: login.password,\n                },\n            }).then((response) => {\n                toggleProgressBar(false);\n                setDelay(0);\n        }).catch((error) => {\n            toggleProgressBar(false);\n            console.error(error);\n            toggleSnackbar(true, error.message);\n        });\n    };\n    return (\n        <div className={classes.root}>\n            <Frame/>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    {loaded && <Paper>\n                        <div className={classes.tableWrapper}>\n\n                            <Table stickyHeader size=\"medium\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell padding=\"checkbox\">\n                                            <Checkbox\n                                                indeterminate={selected.length > 0 && selected.length < alerts.alerts.length}\n                                                checked={selected.length === alerts.alerts.length}\n                                                onChange={handleSelectAllClick}\n                                                inputProps={{'aria-label': 'select all desserts'}}\n                                            />\n                                        </TableCell>\n                                        <TableCell>Alert</TableCell>\n                                        <TableCell>Report Date</TableCell>\n                                        <TableCell>PC Name</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {alerts.alerts.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, key) => {\n                                        const isItemSelected = isSelected(row._id);\n                                        const labelId = `enhanced-table-checkbox-${key}`;\n\n                                        return (\n                                            <TableRow hover tabIndex={-1} key={key}\n                                                      onClick={event => handleClick(event, row._id)}>\n                                                <TableCell padding=\"checkbox\">\n                                                    <Checkbox\n                                                        checked={isItemSelected}\n                                                        inputProps={{'aria-labelledby': labelId}}\n\n                                                    />\n                                                </TableCell>\n                                                <TableCell>{row.Alert}</TableCell>\n                                                <TableCell>{row.AlertDate}</TableCell>\n                                                <TableCell>{row.PCName}</TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                </TableBody>\n                            </Table>\n                        </div>\n                        <TablePagination\n                            rowsPerPageOptions={[10, 25, 100]}\n                            component=\"div\"\n                            count={alerts.alerts.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            backIconButtonProps={{\n                                'aria-label': 'previous page',\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'next page',\n                            }}\n                            onChangePage={handleChangePage}\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\n                        />\n                        {selected.length > 0 &&\n                        <Button variant=\"outlined\" className={classes.button} onClick={onDeletePressed}>\n                            Delete\n                        </Button>}\n                    </Paper>}\n                </Container>\n                <Copyright/>\n            </main>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        alerts: state.alerts,\n        login: state.login,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleProgressBar: (isOpen) => {\n            dispatch(toggleProgressBar(isOpen));\n        },\n        updateAlerts: (monitors) => {\n            dispatch(updateAlerts(monitors));\n        },\n        toggleSnackbar: (isOpen, text) => {\n            dispatch(toggleSnackbar(isOpen, text));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Alerts);\n","import React from 'react';\n\nexport default function Copyright() {\n    return (\n        <div>\n            <h1>404 Not Found!</h1>\n        </div>\n    );\n}","import {createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\nimport {connect} from 'react-redux';\nimport {useCookies} from 'react-cookie';\n\nimport SignIn from './components/Login';\nimport SignUp from './components/Register';\nimport Dashboard from './components/Dashboard';\nimport Reports from './components/Reports';\nimport ReportPage from './components/ReportPage';\nimport Monitors from './components/Monitors';\nimport Alerts from './components/Alerts';\nimport NotFound from './components/NotFound';\n\nimport history from './history';\n\nimport React, {useEffect} from 'react';\nimport {Route, Router, Switch} from 'react-router-dom';\nimport axios from \"axios\";\nimport {toggleSnackbar} from \"./actions/FrameActions\";\nimport {login} from \"./actions/LoginActions\";\n\nfunction App({darkMode, login, onLogin,}) {\n    const theme = React.useMemo(\n        () =>\n            createMuiTheme({\n                palette: {\n                    type: darkMode.darkMode ? 'dark' : 'light',\n                },\n            }),\n    );\n    const [cookies, setCookie] = useCookies(['login']);\n    useEffect(() => {\n        if (cookies.login) {\n            axios.get('/login', {\n                withCredentials: true,\n                auth: {\n                    username: cookies.login.username,\n                    password: cookies.login.password,\n                },\n            }).then((response) => {\n                onLogin(cookies.login.username, cookies.login.password, response.accountID, response.firstName);\n                history.push('/dashboard')\n            }).catch((error) => {\n                console.error(error);\n                toggleSnackbar(true, 'Error while logging in.')\n            });\n        }\n    }, []);\n\n\n    if (!login.loggedIn)\n        history.push('/login');\n\n    return (\n        <Router history={history}>\n            <div>\n                <ThemeProvider theme={theme}>\n\n                    <Switch>\n                        <Route path='/login'>\n                            <SignIn/>\n                        </Route>\n                        <Route path='/register'>\n                            <SignUp/>\n                        </Route>\n                        <Route path='/dashboard'>\n                            <Dashboard/>\n                        </Route>\n                        <Route exact path='/reports'>\n                            <Reports/>\n                        </Route>\n                        <Route path='/monitors'>\n                            <Monitors/>\n                        </Route>\n                        <Route path='/alerts'>\n                            <Alerts/>\n                        </Route>\n                        <Route exsact path={`/report/:reportID`} component={ReportPage}/>\n                        <Route>\n                            <NotFound/>\n                        </Route>\n                    </Switch>\n                </ThemeProvider>\n            </div>\n        </Router>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        darkMode: state.darkMode,\n        login: state.login,\n    };\n};\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onLogin: (username, password, accountID, firstName) => {\n            dispatch(login(username, password, accountID, firstName));\n        },\n        toggleSnackbar: (isOpen, text) => {\n            dispatch(toggleSnackbar(isOpen, text))\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\n\nconst initState = {\n    darkMode: true,\n};\n\nconst reducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"TOGGLE_DARK_MODE\": {\n            return {...state, darkMode: !state.darkMode};\n        }\n\n        default:\n            return state\n    }\n};\n\nexport default reducer;","import React from 'react';\n\nconst initState = {\n    open: false,\n};\n\nconst reducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"TOGGLE_DRAWER\": {\n            return {...state, open: action.payload};\n        }\n\n        default:\n            return state\n    }\n};\n\nexport default reducer;","import React from 'react';\n\nconst initState = {\n    dialogOpen: false,\n    progressbarVisible: false,\n};\n\nconst reducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"TOGGLE_MONITOR_DIALOG\": {\n            return {...state, dialogOpen: action.payload};\n        }\n        case \"TOGGLE_MONITOR_PROGRESSBAR\": {\n            return {...state, progressbarVisible: action.payload};\n        }\n        default:\n            return state\n    }\n};\n\nexport default reducer;","import React from 'react';\n\nconst initState = {\n    progressbarVisible: false,\n    snackbarVisible: false,\n    snackbarText: '',\n};\n\nconst reducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"TOGGLE_FRAME_PROGRESSBAR\": {\n            return {...state, progressbarVisible: action.payload};\n        }\n        case \"TOGGLE_FRAME_SNACKBAR\": {\n            return {...state, ...action.payload};\n        }\n        default:\n            return state\n    }\n};\n\nexport default reducer;","import React from 'react';\n\nconst initState = {\n    loggedIn: false,\n    username:'',\n    password:'',\n    accountID:'',\n    firstName:''\n};\n\nconst reducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"LOGIN\": {\n            return {...state, ...action.payload, loggedIn: true};\n        }\n        case \"LOGOUT\": {\n            return {...initState};\n        }\n        default:\n            return state\n    }\n};\n\nexport default reducer;","import React from 'react';\n\nconst initState = {\n    monitors: [],\n};\n\nconst reducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"UPDATE_MONITORS\": {\n            return {...state, monitors: action.payload};\n        }\n        default:\n            return state\n    }\n};\n\nexport default reducer;","import React from 'react';\n\nconst initState = {\n    reports: [],\n};\n\nconst reducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"UPDATE_REPORTS_SUMMERY\": {\n            return {...state, reports: action.payload};\n        }\n        default:\n            return state\n    }\n};\n\nexport default reducer;","import React from 'react';\n\nconst initState = {\n    reports: {},\n};\n\nconst reducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"UPDATE_REPORTS\": {\n            return {...state, reports: action.payload};\n        }\n        default:\n            return state\n    }\n};\n\nexport default reducer;","import React from 'react';\n\nconst initState = {\n    CPU: [],\n    Disk: {},\n    Memory: {},\n    data: [],\n};\n\nconst reducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"UPDATE_DASHBOARD\": {\n            return {...state, ...action.payload};\n        }\n        default:\n            return state\n    }\n};\n\nexport default reducer;","import React from 'react';\n\nconst initState = {\n    alerts: [],\n};\n\nconst reducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"UPDATE_ALERTS\": {\n            return {...state, alerts: action.payload};\n        }\n        default:\n            return state\n    }\n};\n\nexport default reducer;","import {combineReducers} from 'redux';\nimport DarkModeReducer from './DarkModeReducer';\nimport DrawerReducer from './DrawerReducer';\nimport MonitorDialogReducer from './MonitorDialogReducer';\nimport FrameReducer from './FrameReducer';\nimport LoginReducer from './LoginReducer';\nimport MonitorsReducer from './MonitorsReducer';\nimport ReportsSummeryReducer from './ReportsSummeryReducer';\nimport ReportsReducer from './ReportsReducer';\nimport DashboardReducer from './DashboardReducer';\nimport AlertsReducer from './AlertsReducer';\n\nexport default combineReducers({\n    darkMode:DarkModeReducer,\n    drawer: DrawerReducer,\n    monitorDialog: MonitorDialogReducer,\n    frame: FrameReducer,\n    login: LoginReducer,\n    monitors: MonitorsReducer,\n    reportsSummery: ReportsSummeryReducer,\n    reports: ReportsReducer,\n    dashboard: DashboardReducer,\n    alerts: AlertsReducer,\n});\n","import {createStore} from 'redux';\nimport logger from 'redux-logger';\nimport reducers from './reducers';\nimport {applyMiddleware} from 'redux';\nimport promiseMiddleware  from 'redux-promise-middleware';\n\nexport default createStore(\n    reducers,\n    applyMiddleware(logger, promiseMiddleware),\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\nimport {CookiesProvider} from 'react-cookie';\n\nReactDOM.render(\n    <CookiesProvider>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </CookiesProvider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}